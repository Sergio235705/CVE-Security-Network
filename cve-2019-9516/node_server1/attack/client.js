const http2 = require('http2');
const fs = require('fs');

var client = http2.connect(`https://${process.env.SERVER_IP}:${process.env.SERVER_PORT}`, {
  ca: fs.readFileSync('./keys/certificate.pem')
});
client.on('error', (err) => console.error(err));

var req = client.request({ ':path': '/', '': 'bar', 'bar': '' })

req.on('response', (headers, flags) => {
  for (const name in headers) {
    console.log(`${name}: ${headers[name]}`);
  }
});

req.setEncoding('utf8');
let data = '';
req.on('data', (chunk) => { data += chunk; });
req.on('end', () => {
  console.log(`\n${data}`);
  client.close();
});
req.end();

const delay = 10
for (var i = 0; i < 10000; i++) {
  setTimeout(function() {
    var client = http2.connect(`https://${process.env.SERVER_IP}:${process.env.SERVER_PORT}`, {
      ca: fs.readFileSync('./keys/certificate.pem')
    });
    client.on('error', (err) => console.error(err));

    var req = client.request({ ':path': '/', '': 'bar', 'bar': '' })

    req.on('response', (headers, flags) => {
      for (const name in headers) {
        console.log(`${name}: ${headers[name]}`);
      }
    });

    req.setEncoding('utf8');
    let data = '';
    req.on('data', (chunk) => { data += chunk; });
    req.on('end', () => {
      console.log(`\n${data}`);
      client.close();
    });
    req.end();
  }, delay * i);
}
